<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RCE on All Things Cyber – joonkim0625</title>
    <link>https://joonkim0625.github.io/tags/rce/</link>
    <description>Recent content in RCE on All Things Cyber – joonkim0625</description>
    <generator>Hugo -- 0.148.0</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://joonkim0625.github.io/tags/rce/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Toxic HTB Walkthrough</title>
      <link>https://joonkim0625.github.io/posts/2025-04-21-toxic/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://joonkim0625.github.io/posts/2025-04-21-toxic/</guid>
      <description>&lt;p&gt;This post documents my process for solving the &lt;strong&gt;Toxic&lt;/strong&gt; box on Hack The Box. This box is all about PHP insecure deserialization, exploiting LFI, and using log poisoning to achieve remote code execution.&lt;/p&gt;
&lt;h2 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h2&gt;
&lt;p&gt;PHP insecure deserialization to LFI that abuses log poisoning for RCE.&lt;/p&gt;
&lt;h2 id=&#34;learning&#34;&gt;Learning&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ianpeter.medium.com/exploiting-log-poisoning-through-lfi-and-serialization-in-php-e039e7b126ad&#34;&gt;https://ianpeter.medium.com/exploiting-log-poisoning-through-lfi-and-serialization-in-php-e039e7b126ad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The official writeup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wasn&amp;rsquo;t sure what to do at first, so I checked the writeup after struggling for a while.&lt;/p&gt;
&lt;h2 id=&#34;challenge-analysis--source-code-review&#34;&gt;Challenge Analysis &amp;amp; Source Code Review&lt;/h2&gt;
&lt;p&gt;The web page didn&amp;rsquo;t reveal much, but looking at the source code, you see:&lt;/p&gt;</description>
    </item>
    <item>
      <title>PicoCTF Trickster</title>
      <link>https://joonkim0625.github.io/posts/2024-11-26-picoctf-trickster/</link>
      <pubDate>Tue, 26 Nov 2024 01:56:19 +0000</pubDate>
      <guid>https://joonkim0625.github.io/posts/2024-11-26-picoctf-trickster/</guid>
      <description>&lt;h2 id=&#34;trickster&#34;&gt;Trickster&lt;/h2&gt;
&lt;p&gt;Author: Junias Bonou&lt;/p&gt;
&lt;p&gt;Description
I found a web app that can help process images: PNG images only! Try it here!&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;picoctf-trickster&#34; loading=&#34;lazy&#34; src=&#34;https://joonkim0625.github.io/images/picoctf-trickster/picoctf-trickster.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;When I attempted to upload some random files, I got the following error message:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: File name does not contain &#39;.png&#39;.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This suggests that the app strictly checks for .png extensions. To dig deeper, we can perform a directory search to see if we can find anything useful. A tool like gobuster is perfect for this kind of task.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTB Academy File Inclusion Skills Assessment</title>
      <link>https://joonkim0625.github.io/posts/2024-10-13-htb-academy-file-inclusion-skills-assessment/</link>
      <pubDate>Sun, 13 Oct 2024 22:20:03 +0000</pubDate>
      <guid>https://joonkim0625.github.io/posts/2024-10-13-htb-academy-file-inclusion-skills-assessment/</guid>
      <description>&lt;h2 id=&#34;identifying-the-local-file-inclusion-lfi-vulnerability&#34;&gt;Identifying the Local File Inclusion (LFI) Vulnerability&lt;/h2&gt;
&lt;p&gt;While working on the skills assessment for the File Inclusion module, I first checked whether the target website was vulnerable to Local File Inclusion (LFI). The website had a query parameter called page in the URL, as shown below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://&amp;lt;IP&amp;gt;/index.php?page=&amp;lt;page name&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When I attempted to traverse directories using relative paths, like &lt;code&gt;../../../../etc/passwd&lt;/code&gt;, I encountered an error message: &amp;ldquo;&lt;strong&gt;Invalid input detected!&lt;/strong&gt;&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;directory-enumeration-with-ffuf&#34;&gt;Directory Enumeration with ffuf&lt;/h2&gt;
&lt;p&gt;To explore available pages on the site, I used the ffuf tool to fuzz the directories:&lt;/p&gt;</description>
    </item>
    <item>
      <title>TryHackMe - HackPark</title>
      <link>https://joonkim0625.github.io/posts/2023-6-28-thm-hackpark/</link>
      <pubDate>Wed, 28 Jun 2023 22:00:00 +0000</pubDate>
      <guid>https://joonkim0625.github.io/posts/2023-6-28-thm-hackpark/</guid>
      <description>&lt;h2 id=&#34;challenge-hackpark&#34;&gt;Challenge: HackPark&lt;/h2&gt;
&lt;p&gt;In this box, it introduces Hydra, RCE &amp;amp; WinPEAS tools/techniques to exploit a
Windows System.&lt;/p&gt;
&lt;h2 id=&#34;recon&#34;&gt;Recon&lt;/h2&gt;
&lt;h3 id=&#34;nmap&#34;&gt;NMAP&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nmap -sC -sV -O -sT 10.10.170.188
Starting Nmap 7.93 ( https://nmap.org ) at 2023-06-20 18:27 UTC
Nmap scan report for ip-10-10-170-188.eu-west-1.compute.internal (10.10.170.188)
Host is up (0.00068s latency).
Not shown: 998 filtered tcp ports (no-response)
PORT     STATE SERVICE            VERSION
80/tcp   open  http               Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
| http-robots.txt: 6 disallowed entries
| /Account/*.* /search /search.aspx /error404.aspx
|_/archive /archive.aspx
|_http-server-header: Microsoft-IIS/8.5
|_http-title: hackpark | hackpark amusements
| http-methods:
|_  Potentially risky methods: TRACE
3389/tcp open  ssl/ms-wbt-server?
|_ssl-date: 2023-06-20T18:28:29+00:00; 0s from scanner time.
| ssl-cert: Subject: commonName=hackpark
| Not valid before: 2023-06-19T18:14:25
|_Not valid after:  2023-12-19T18:14:25
| rdp-ntlm-info:
|   Target_Name: HACKPARK
|   NetBIOS_Domain_Name: HACKPARK
|   NetBIOS_Computer_Name: HACKPARK
|   DNS_Domain_Name: hackpark
|   DNS_Computer_Name: hackpark
|   Product_Version: 6.3.9600
|_  System_Time: 2023-06-20T18:28:24+00:00
MAC Address: 02:51:BA:0B:1C:1B (Unknown)
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose
Running (JUST GUESSING): Microsoft Windows 2012 (89%)
OS CPE: cpe:/o:microsoft:windows_server_2012:r2
Aggressive OS guesses: Microsoft Windows Server 2012 or Windows Server 2012 R2 (89%), Microsoft Windows Server 2012 R2 (89%), Microsoft Windows Server 2012 (87%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 1 hop
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 79.85 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Port 80 runs Microsoft HTTPAPI httpd 2.0. Also, port 3389 indicates that once
we get the cred to get onto the target machine we can remotely access it by
using &lt;code&gt;xfreerdp&lt;/code&gt; or &lt;code&gt;rdesktop&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
